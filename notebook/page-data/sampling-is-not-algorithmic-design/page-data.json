{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/sampling-is-not-algorithmic-design","result":{"data":{"brainNote":{"slug":"sampling-is-not-algorithmic-design","title":"Sampling is not algorithmic design","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Sampling is not algorithmic design\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://philippschmitt.com/work/chair\"\n  }), \"Art and design projects involving GANs\"), \" have been pretty hot recently. And while I find them cool, I tend to find them less interesting than other algorithmic design projects such as \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.joelsimon.net/evo_floorplans.html\"\n  }), \"Evolving Floorplans\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://n-e-r-v-o-u-s.com/shop/generativeProduct.php?code=99\"\n  }), \"Hyphae Lamps\"), \".\"), mdx(\"p\", null, \"I think I finally understand why. GANs, and other generative models from machine learning, model distributions. In the case of design projects involving them, they model the distribution of existing human designs. New designs are then generated by samping from the distribution. Your new design is an interpolation of existing designs. \"), mdx(\"p\", null, \"When interpolating from old designs, you constrain yourself to old media. You're constraining yourself to chairs that were drawn with pencils and built with traditional woodworking tools. To me, this misses the whole point of algorithmic design. Design with algorithms, not pencils. Step up the ladder of abstraction, and play with previously unmanagable complexity.\"), mdx(\"p\", null, \"Designing with algorithms gives rise to many opportunities for creativity. How do you parameterise your design? How do you translate parameters (genotypes) to objects (phenotypes)? If you\\u2019re optimising your design for some definition of good, how do you measure your definition of good? How do you define good?  And what if you can't define good?\", mdx(\"sup\", _extends({\n    parentName: \"p\"\n  }, {\n    \"id\": \"fnref-1\"\n  }), mdx(\"a\", _extends({\n    parentName: \"sup\"\n  }, {\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }), \"1\"))), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"id\": \"fn-1\"\n  }), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/optimise-implicit-objectives-with-breeding\"\n  }), \"Optimise implicit objectives with breeding\"), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#fnref-1\",\n    \"className\": \"footnote-backref\"\n  }), \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Algorithmic design","slug":"algorithmic-design","childMdx":{"excerpt":"My favourite algorithmic design people: Joel Simon Nervous system Anders Hoff, see his essay  On generative algorithms Some thoughts on…"}}],"outboundReferenceNotes":[{"title":"Optimise implicit objectives with breeding","slug":"optimise-implicit-objectives-with-breeding","childMdx":{"excerpt":"Say you want to design via optimisation. You define a notion of good, and (let’s assume) it’s magically achieved. How do you define good…"}}]},"site":{"siteMetadata":{"title":"Rheza's working notes"}}},"pageContext":{"slug":"sampling-is-not-algorithmic-design"}}}