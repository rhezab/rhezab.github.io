{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/timestamping","result":{"data":{"brainNote":{"slug":"timestamping","title":"Timestamping","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Timestamping\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Generally speaking, this project is interested in studying how associations are coded. In particular, we're interested in temporal associations between episodic memories. A paper by Rubin et. al suggests that hippocampal ensemble dynamics may underlie a possible method for coding temporal assocations. Namely, this method says that the more the ensembles coding two memories overlap, the closer together they are in time. \"), mdx(\"p\", null, \"As such, the ensembles need to vary smoothly in time. An algorithm for generating such ensembles is \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/ship-of-theseus\"\n  }), \"Ship of Theseus\"), \". The nice thing about \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/ship-of-theseus\"\n  }), \"Ship of Theseus\"), \" is that it relies only on local information. It keeps time according to a stochastic process which is dependent only on current individual neuron activity (so it is local in both space and time).\"), mdx(\"p\", null, \"We verified that applying gates generated by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/ship-of-theseus\"\n  }), \"Ship of Theseus\"), \" to MNIST embeddings (trained with dropout) maintained decoding of \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"what\"), \" while supporting decoding of \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"when\"), \" (both categorical and ordinal decoding of time). This verifies the efficacy of ensemble coding for coding \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"when\"), \" while maintaing \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"what\"), \".\"), mdx(\"p\", null, \"Next, we'd like to study the efficacy of ensemble coding for coding \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"associations\"), \". Again, we'd like to verify that ensemble coding is capable of coding associations based on \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"when\"), \" (temporal associations) while maintaining assocations based on \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"what\"), \" (semantic associations).\"), mdx(\"p\", null, \"In particular, we'd like to study ensemble coding in the context of associative memory recall. A general way of expressing an associative memory system is as a dynamical system (e.g. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/memo-as-a-dynamical-system\"\n  }), \"MEMO as a dynamical system\"), \"):\"), mdx(\"span\", {\n    \"className\": \"katex-display\"\n  }, mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"katex\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"katex-mathml\"\n  }), mdx(\"math\", _extends({\n    parentName: \"span\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1998/Math/MathML\"\n  }), mdx(\"semantics\", {\n    parentName: \"math\"\n  }, mdx(\"mrow\", {\n    parentName: \"semantics\"\n  }, mdx(\"msub\", {\n    parentName: \"mrow\"\n  }, mdx(\"mi\", {\n    parentName: \"msub\"\n  }, \"x\"), mdx(\"mrow\", {\n    parentName: \"msub\"\n  }, mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"t\"), mdx(\"mo\", {\n    parentName: \"mrow\"\n  }, \"+\"), mdx(\"mn\", {\n    parentName: \"mrow\"\n  }, \"1\"))), mdx(\"mo\", {\n    parentName: \"mrow\"\n  }, \"=\"), mdx(\"msub\", {\n    parentName: \"mrow\"\n  }, mdx(\"mi\", {\n    parentName: \"msub\"\n  }, \"x\"), mdx(\"mi\", {\n    parentName: \"msub\"\n  }, \"t\")), mdx(\"mo\", {\n    parentName: \"mrow\"\n  }, \"+\"), mdx(\"mi\", {\n    parentName: \"mrow\"\n  }, \"f\"), mdx(\"mo\", _extends({\n    parentName: \"mrow\"\n  }, {\n    \"stretchy\": \"false\"\n  }), \"(\"), mdx(\"msub\", {\n    parentName: \"mrow\"\n  }, mdx(\"mi\", {\n    parentName: \"msub\"\n  }, \"x\"), mdx(\"mi\", {\n    parentName: \"msub\"\n  }, \"t\")), mdx(\"mo\", _extends({\n    parentName: \"mrow\"\n  }, {\n    \"stretchy\": \"false\"\n  }), \")\")), mdx(\"annotation\", _extends({\n    parentName: \"semantics\"\n  }, {\n    \"encoding\": \"application/x-tex\"\n  }), \"x_{t+1} = x_t + f(x_t)\")))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"base\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.638891em\",\n      \"verticalAlign\": \"-0.208331em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\"\n  }), \"x\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"msupsub\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-t vlist-t2\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-r\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist\",\n    \"style\": {\n      \"height\": \"0.301108em\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"style\": {\n      \"top\": \"-2.5500000000000003em\",\n      \"marginLeft\": \"0em\",\n      \"marginRight\": \"0.05em\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"pstrut\",\n    \"style\": {\n      \"height\": \"2.7em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"sizing reset-size6 size3 mtight\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mtight\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"t\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mbin mtight\"\n  }), \"+\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mtight\"\n  }), \"1\"))))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-s\"\n  }), \"\\u200B\")), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-r\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist\",\n    \"style\": {\n      \"height\": \"0.208331em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2777777777777778em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mrel\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2777777777777778em\"\n    }\n  }))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"base\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"0.73333em\",\n      \"verticalAlign\": \"-0.15em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\"\n  }), \"x\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"msupsub\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-t vlist-t2\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-r\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist\",\n    \"style\": {\n      \"height\": \"0.2805559999999999em\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"style\": {\n      \"top\": \"-2.5500000000000003em\",\n      \"marginLeft\": \"0em\",\n      \"marginRight\": \"0.05em\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"pstrut\",\n    \"style\": {\n      \"height\": \"2.7em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"sizing reset-size6 size3 mtight\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"t\")))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-s\"\n  }), \"\\u200B\")), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-r\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist\",\n    \"style\": {\n      \"height\": \"0.15em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2222222222222222em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mbin\"\n  }), \"+\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mspace\",\n    \"style\": {\n      \"marginRight\": \"0.2222222222222222em\"\n    }\n  }))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"base\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"strut\",\n    \"style\": {\n      \"height\": \"1em\",\n      \"verticalAlign\": \"-0.25em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\",\n    \"style\": {\n      \"marginRight\": \"0.10764em\"\n    }\n  }), \"f\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mopen\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault\"\n  }), \"x\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"msupsub\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-t vlist-t2\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-r\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist\",\n    \"style\": {\n      \"height\": \"0.2805559999999999em\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"style\": {\n      \"top\": \"-2.5500000000000003em\",\n      \"marginLeft\": \"0em\",\n      \"marginRight\": \"0.05em\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"pstrut\",\n    \"style\": {\n      \"height\": \"2.7em\"\n    }\n  })), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"sizing reset-size6 size3 mtight\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mord mathdefault mtight\"\n  }), \"t\")))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-s\"\n  }), \"\\u200B\")), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist-r\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"vlist\",\n    \"style\": {\n      \"height\": \"0.15em\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))))), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"mclose\"\n  }), \")\"))))), mdx(\"p\", null, \"In such systems, memories usually correspond to fixed points. In energy-based systems, the goal is usually to define convex bowls where the local minimum corresponds to a particular memory. With such work, \\\"association\\\" usually refers to the association between states inside the bowl and the local minima (e.g. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://neuronaldynamics.epfl.ch/online/Ch17.S2.html\"\n  }), \"Hopfield model\"), \"). Notice that the type of \\\"association\\\" we're interested in is different. We're interested in associations between memories, i.e. associations between bowls.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Neuroscience questions:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Given an episode A-B (e.g. woman-dog), how are the individual representations A and B combined to form the episodic memory A-B? \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.sciencedirect.com/science/article/pii/S0896627318306822#bib46\"\n  }), \"Big loop recurrence\"), \" (MEMO is based on this principle) makes the jump between AB and BC possible, but how is the association AB enncoded in the hippocampus in the first place? Moreover, how is the jump in temporal context made possible when going between AB and BC?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What is the significance of ensemble-based coding? One significance is that it supports orthogonalization of episodic memories. What are others? Perhaps they may play a role in supporting \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://academic.oup.com/cercor/article/30/3/952/5547080\"\n  }), \"associative recall based on ensemble overlap\"), \"?\")), mdx(\"br\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AI questions:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dynamic ensembles give episodic memories temporal structure. How can AI take advantage of this? Perhaps it may support \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.nature.com/articles/s41467-019-13073-w\"\n  }), \"credit assignment over long time scales\"), \", where \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5953519/\"\n  }), \"temporally structured episodic memories are thought to be helpful\"), \". Of course, ensemble-based timestamping is not the only way to encode temporal structure into episodic memories and simpler coding schemes may be better for AI-based work. Also see: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.nature.com/articles/nn.4650\"\n  }), \"the hippocampus as a predictive map\"))), mdx(\"br\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Relevant notes:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/paired-associative-inference\"\n  }), \"Paired associative inference\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/memo\"\n  }), \"MEMO\"))), mdx(\"br\", null));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[],"outboundReferenceNotes":[{"title":"ship-of-theseus","slug":"ship-of-theseus","childMdx":{"excerpt":""}},{"title":"MEMO as a dynamical system","slug":"memo-as-a-dynamical-system","childMdx":{"excerpt":"MEMO  is described by the following equations:  It's helpful to break  MEMO  up into two parts. The first part (equations 7-10) defines the…"}},{"title":"Paired associative inference","slug":"paired-associative-inference","childMdx":{"excerpt":"Here I will describe PAI as presented in the  MEMO  paper. Let there be   sequences of length  . For simplicity, let   for our examples. So…"}},{"title":"MEMO","slug":"memo","childMdx":{"excerpt":"A description of the episodic memory model presented in  MEMO: A Deep Network for Flexible Combination of Episodic Memories . Let the input…"}}]},"site":{"siteMetadata":{"title":"Rheza's notes"}}},"pageContext":{"slug":"timestamping"}}}